services:
  postgres:
    image: postgres:13
    container_name: postgres_db2
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-BCG_Finance}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-Musy19}
    ports:
      - "5432:5432" 
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d

    healthcheck:  
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]  
      interval: 10s  
      retries: 5 
      start_period: 30s

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend_app
    environment:  
      FLASK_APP: ${FLASK_APP:-run.py}  
      FLASK_ENV: ${FLASK_ENV:-development}  
      POSTGRES_DB: ${POSTGRES_DB:-BCG_Finance}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-Musy19}
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      
    ports:
      - "5001:5000"
    depends_on:
      postgres:
        condition: service_healthy

    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

    volumes:
      - .:/app
      - ./data:/app/data
      - ./env:/app/.env
    entrypoint: ["/app/entrypoint.sh"]

volumes:
  postgres_data:
    driver: local