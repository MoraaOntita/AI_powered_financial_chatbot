name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}  
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        options: >
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5 
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    # Install Docker Compose
    - name: Install Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Install dependencies
      run: |
          python -m pip install --upgrade pip
          for i in {1..5}; do pip install pytest && break || sleep 5; done

    - name: Build backend Docker image
      run: docker-compose -f docker-compose.yml build
      env:
        POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        FLASK_APP: ${{ secrets.FLASK_APP }}
        FLASK_ENV: ${{ secrets.FLASK_ENV }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}

    - name: Wait for PostgreSQL to be ready
      run: ./wait-for-postgres.sh postgres 5432
      env:
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}

    - name: Run backend tests using Docker Compose
      run: docker-compose -f docker-compose.yml up --abort-on-container-exit --exit-code-from backend_app
      env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          FLASK_APP: ${{ secrets.FLASK_APP }}
          FLASK_ENV: ${{ secrets.FLASK_ENV }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}

    - name: Shutdown services
      run: docker-compose -f docker-compose.yml down

    - name: Archive test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: tests/test-results.xml
